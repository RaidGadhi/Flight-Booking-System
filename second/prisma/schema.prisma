generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model aircraft {
  aircraftid         String             @id @default(uuid())
  aircrafttype       String?
  firstclassprice    Int?
  economyprice       Int?
  businessclassprice Int?
  flights            flights[]
  maIntenancedates   maIntenancedates[]
  seats              seats[]
}

model flights {
  flightid   String    @id @default(uuid())
  srccity    String?
  dstcity    String?
  flightdate DateTime?
  flighttime DateTime? @db.Time(6)
  flightno   String?
  aircraftid String?
  aircraft   aircraft? @relation(fields: [aircraftid], references: [aircraftid], onDelete: NoAction, onUpdate: NoAction)
  tickets    tickets[]
  seats      seats[]
}

model maIntenancedates {
  mdates     DateTime
  aircraftid String
  aircraft   aircraft @relation(fields: [aircraftid], references: [aircraftid], onDelete: NoAction, onUpdate: NoAction)

  @@id([mdates, aircraftid])
}

model passenger {
  passengerid String     @id @default(uuid())
  phone       String?
  email       String     @unique
  name        String?
  payments    payments[]
  tickets     tickets[]
}

model payments {
  paymentid     String     @id @default(uuid())
  amount        Int?
  paymentdate   DateTime?
  paymentmethod String?
  passengerid   String?
  passenger     passenger? @relation(fields: [passengerid], references: [passengerid], onDelete: NoAction, onUpdate: NoAction)
}

model seats {
  seatid          String    @id @default(uuid())
  seatnumber      String?
  isbooked        Boolean?
  seatclass       SeatClass
  aircraftid      String?
  aircraft        aircraft? @relation(fields: [aircraftid], references: [aircraftid], onDelete: NoAction, onUpdate: NoAction)
  tickets         tickets?
  flights         flights?  @relation(fields: [flightsFlightid], references: [flightid])
  flightsFlightid String?
}

model tickets {
  ticketno    String        @id @default(uuid())
  passengerid String?
  flightid    String?
  status      TicketStatus?
  bookingdate DateTime?
  price       Int?
  // class       String?
  seatid      String?       @unique
  flights     flights?      @relation(fields: [flightid], references: [flightid], onDelete: NoAction, onUpdate: NoAction)
  passenger   passenger?    @relation(fields: [passengerid], references: [passengerid], onDelete: NoAction, onUpdate: NoAction)
  seats       seats?        @relation(fields: [seatid], references: [seatid], onDelete: NoAction, onUpdate: NoAction)
}

enum SeatClass {
  econnomy
  business
  firstClass
}

enum TicketStatus {
  Active
  Waitlisted
  Cancelled
}
